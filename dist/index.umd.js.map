{"version":3,"file":"index.umd.js","sources":["../index.ts"],"sourcesContent":["import {useCallback, useEffect, useLayoutEffect, useRef, useState,} from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nexport type TLogLevel = \"debug\" | \"info\" | \"warn\" | \"error\" | \"none\";\n\nexport type TOptions = {\n  logLevel?: TLogLevel;\n  maxFontSize?: number;\n  minFontSize?: number;\n  onFinish?: (fontSize: number) => void;\n  onStart?: () => void;\n  resolution?: number;\n};\n\nconst LOG_LEVEL: Record<TLogLevel, number> = {\n  debug: 10,\n  info: 20,\n  warn: 30,\n  error: 40,\n  none: 100,\n};\n\n// Suppress `useLayoutEffect` warning when rendering on the server\n// https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsoLayoutEffect =\n  typeof window !== \"undefined\" &&\n  window.document &&\n  window.document.createElement\n    ? useLayoutEffect\n    : useEffect;\n\nconst useFitText = ({\n                      logLevel: logLevelOption = \"info\",\n                      maxFontSize = 100,\n                      minFontSize = 20,\n                      onFinish,\n                      onStart,\n                      resolution = 5,\n                    }: TOptions = {}) => {\n  const logLevel = LOG_LEVEL[logLevelOption];\n\n  const initState = useCallback(() => {\n    return {\n      calcKey: 0,\n      fontSize: maxFontSize,\n      fontSizePrev: minFontSize,\n      fontSizeMax: maxFontSize,\n      fontSizeMin: minFontSize,\n    };\n  }, [maxFontSize, minFontSize]);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const innerHtmlPrevRef = useRef<string>();\n  const isCalculatingRef = useRef(false);\n  const [state, setState] = useState(initState);\n  const {calcKey, fontSize, fontSizeMax, fontSizeMin, fontSizePrev} = state;\n\n  // Montior div size changes and recalculate on resize\n  let animationFrameId: number | null = null;\n  const [ro] = useState(\n    () =>\n      new ResizeObserver(() => {\n        animationFrameId = window.requestAnimationFrame(() => {\n          if (isCalculatingRef.current) {\n            return;\n          }\n          onStart && onStart();\n          isCalculatingRef.current = true;\n          // `calcKey` is used in the dependencies array of\n          // `useIsoLayoutEffect` below. It is incremented so that the font size\n          // will be recalculated even if the previous state didn't change (e.g.\n          // when the text fit initially).\n          setState({\n            ...initState(),\n            calcKey: calcKey + 1,\n          });\n        });\n      }),\n  );\n\n  useEffect(() => {\n    if (ref.current) {\n      ro.observe(ref.current);\n    }\n    return () => {\n      animationFrameId && window.cancelAnimationFrame(animationFrameId);\n      ro.disconnect();\n    };\n  }, [animationFrameId, ro]);\n\n  // Recalculate when the div contents change\n  const innerHtml = ref.current && ref.current.innerHTML;\n  useEffect(() => {\n    if (calcKey === 0 || isCalculatingRef.current) {\n      return;\n    }\n    if (innerHtml !== innerHtmlPrevRef.current) {\n      onStart && onStart();\n      setState({\n        ...initState(),\n        calcKey: calcKey + 1,\n      });\n    }\n    innerHtmlPrevRef.current = innerHtml;\n  }, [calcKey, initState, innerHtml, onStart]);\n\n  // Check overflow and resize font\n  useIsoLayoutEffect(() => {\n    // Don't start calculating font size until the `resizeKey` is incremented\n    // above in the `ResizeObserver` callback. This avoids an extra resize\n    // on initialization.\n    if (calcKey === 0) {\n      return;\n    }\n\n    const isWithinResolution = Math.abs(fontSize - fontSizePrev) <= resolution;\n    const isOverflow =\n      !!ref.current &&\n      (ref.current.scrollHeight > ref.current.offsetHeight ||\n        ref.current.scrollWidth > ref.current.offsetWidth);\n    const isFailed = isOverflow && fontSize === fontSizePrev;\n    const isAsc = fontSize > fontSizePrev;\n\n    // Return if the font size has been adjusted \"enough\" (change within `resolution`)\n    // reduce font size by one increment if it's overflowing.\n    if (isWithinResolution) {\n      if (isFailed) {\n        isCalculatingRef.current = false;\n        if (logLevel <= LOG_LEVEL.info) {\n          console.info(\n            `[use-fit-text] reached \\`minFontSize = ${minFontSize}\\` without fitting text`,\n          );\n        }\n      } else if (isOverflow) {\n        setState({\n          fontSize: isAsc ? fontSizePrev : fontSizeMin,\n          fontSizeMax,\n          fontSizeMin,\n          fontSizePrev,\n          calcKey,\n        });\n      } else {\n        isCalculatingRef.current = false;\n        onFinish && onFinish(fontSize);\n      }\n      return;\n    }\n\n    // Binary search to adjust font size\n    let delta: number;\n    let newMax = fontSizeMax;\n    let newMin = fontSizeMin;\n    if (isOverflow) {\n      delta = isAsc ? fontSizePrev - fontSize : fontSizeMin - fontSize;\n      newMax = Math.min(fontSizeMax, fontSize);\n    } else {\n      delta = isAsc ? fontSizeMax - fontSize : fontSizePrev - fontSize;\n      newMin = Math.max(fontSizeMin, fontSize);\n    }\n    setState({\n      calcKey,\n      fontSize: fontSize + delta / 2,\n      fontSizeMax: newMax,\n      fontSizeMin: newMin,\n      fontSizePrev: fontSize,\n    });\n  }, [\n    calcKey,\n    fontSize,\n    fontSizeMax,\n    fontSizeMin,\n    fontSizePrev,\n    onFinish,\n    ref,\n    resolution,\n  ]);\n\n  const forceRefit = useCallback(() => {\n    setState({\n      ...initState(),\n      calcKey: calcKey + 1,\n    });\n  }, [calcKey, initState]);\n\n  return {fontSize: `${fontSize}%`, ref, forceRefit};\n};\n\nexport default useFitText;\n"],"names":["LOG_LEVEL","debug","info","warn","error","none","useIsoLayoutEffect","window","document","createElement","useLayoutEffect","useEffect","_temp","_ref$logLevel","_ref","logLevel","_ref$maxFontSize","maxFontSize","_ref$minFontSize","minFontSize","onFinish","onStart","_ref$resolution","resolution","initState","useCallback","calcKey","fontSize","fontSizePrev","fontSizeMax","fontSizeMin","ref","useRef","innerHtmlPrevRef","isCalculatingRef","_useState","useState","state","setState","animationFrameId","ro","ResizeObserver","requestAnimationFrame","current","_extends","observe","cancelAnimationFrame","disconnect","innerHtml","innerHTML","isWithinResolution","Math","abs","isOverflow","scrollHeight","offsetHeight","scrollWidth","offsetWidth","isAsc","console","delta","newMax","newMin","min","max","forceRefit"],"mappings":"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"}